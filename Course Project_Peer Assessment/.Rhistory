##########################
tr1<-read.table("./UCI HAR Dataset/test/subject_test.txt")
tr2<-read.table("./UCI HAR Dataset/test/X_test.txt")
tr3<-read.table("./UCI HAR Dataset/test/Y_test.txt")
tris1<-read.table("./UCI HAR Dataset/test/Inertial Signals/body_acc_x_test.txt")
tris2<-read.table("./UCI HAR Dataset/test/Inertial Signals/body_acc_y_test.txt")
tris3<-read.table("./UCI HAR Dataset/test/Inertial Signals/body_acc_z_test.txt")
tris4<-read.table("./UCI HAR Dataset/test/Inertial Signals/body_gyro_x_test.txt")
tris5<-read.table("./UCI HAR Dataset/test/Inertial Signals/body_gyro_y_test.txt")
tris6<-read.table("./UCI HAR Dataset/test/Inertial Signals/body_gyro_z_test.txt")
tris7<-read.table("./UCI HAR Dataset/test/Inertial Signals/total_acc_x_test.txt")
tris8<-read.table("./UCI HAR Dataset/test/Inertial Signals/total_acc_y_test.txt")
tris9<-read.table("./UCI HAR Dataset/test/Inertial Signals/total_acc_z_test.txt")
tr11<-read.table("./UCI HAR Dataset/train/subject_train.txt")
tr12<-read.table("./UCI HAR Dataset/train/X_train.txt")
tr13<-read.table("./UCI HAR Dataset/train/Y_train.txt")
tris11<-read.table("./UCI HAR Dataset/train/Inertial Signals/body_acc_x_train.txt")
tris12<-read.table("./UCI HAR Dataset/train/Inertial Signals/body_acc_y_train.txt")
tris13<-read.table("./UCI HAR Dataset/train/Inertial Signals/body_acc_z_train.txt")
tris14<-read.table("./UCI HAR Dataset/train/Inertial Signals/body_gyro_x_train.txt")
tris15<-read.table("./UCI HAR Dataset/train/Inertial Signals/body_gyro_y_train.txt")
tris16<-read.table("./UCI HAR Dataset/train/Inertial Signals/body_gyro_z_train.txt")
tris17<-read.table("./UCI HAR Dataset/train/Inertial Signals/total_acc_x_train.txt")
tris18<-read.table("./UCI HAR Dataset/train/Inertial Signals/total_acc_y_train.txt")
tris19<-read.table("./UCI HAR Dataset/train/Inertial Signals/total_acc_z_train.txt")
############################################################
colnames(tr1)
colnames(tr2)
colnames(tr3)
colnames(tris1)
colnames(tris2)
colnames(tris3)
colnames(tris4)
colnames(tris5)
colnames(tris6)
colnames(tris7)
colnames(tris8)
colnames(tris9)
dflist = list(tr1,tr2)#,tr3,tr11,tr12,tr13)
join_all(dflist)
total <- merge(tr1,tr2,by.x="V1",by.y="v1",all=FALSE)
tr1
tr2
tr3
total <- merge(tr1,tr3,by.x="V1",by.y="v1",all=FALSE)
total <- merge(tr1,tr3,by.x="V1",by.y="V1",all=FALSE)
total
total <- merge(tr1,tr3,by.x="V1",by.y="V1",all=TRUE)
total
tr11
total <- merge(tr1,tr11,by.x="V1",by.y="V1",all=TRUE)
total
tr1
tr11
tot1<- merge(tr2,tr12)
names(tr2)
names(tr12)
names(tr1)
names(tr11)
names(tr3)
names(tr13)
tot1<- merge(tr3,tr13)
dflist = list(tr1,tr11,tr3,tr13)#,tr3,tr11,tr12,tr13)
tj<-join_all(dflist)
library(plyr)
##########################
tr1<-read.table("./UCI HAR Dataset/test/subject_test.txt")
tr2<-read.table("./UCI HAR Dataset/test/X_test.txt")
tr3<-read.table("./UCI HAR Dataset/test/Y_test.txt")
# tris1<-read.table("./UCI HAR Dataset/test/Inertial Signals/body_acc_x_test.txt")
# tris2<-read.table("./UCI HAR Dataset/test/Inertial Signals/body_acc_y_test.txt")
# tris3<-read.table("./UCI HAR Dataset/test/Inertial Signals/body_acc_z_test.txt")
# tris4<-read.table("./UCI HAR Dataset/test/Inertial Signals/body_gyro_x_test.txt")
# tris5<-read.table("./UCI HAR Dataset/test/Inertial Signals/body_gyro_y_test.txt")
# tris6<-read.table("./UCI HAR Dataset/test/Inertial Signals/body_gyro_z_test.txt")
# tris7<-read.table("./UCI HAR Dataset/test/Inertial Signals/total_acc_x_test.txt")
# tris8<-read.table("./UCI HAR Dataset/test/Inertial Signals/total_acc_y_test.txt")
# tris9<-read.table("./UCI HAR Dataset/test/Inertial Signals/total_acc_z_test.txt")
tr11<-read.table("./UCI HAR Dataset/train/subject_train.txt")
tr12<-read.table("./UCI HAR Dataset/train/X_train.txt")
tr13<-read.table("./UCI HAR Dataset/train/Y_train.txt")
# tris11<-read.table("./UCI HAR Dataset/train/Inertial Signals/body_acc_x_train.txt")
# tris12<-read.table("./UCI HAR Dataset/train/Inertial Signals/body_acc_y_train.txt")
# tris13<-read.table("./UCI HAR Dataset/train/Inertial Signals/body_acc_z_train.txt")
# tris14<-read.table("./UCI HAR Dataset/train/Inertial Signals/body_gyro_x_train.txt")
# tris15<-read.table("./UCI HAR Dataset/train/Inertial Signals/body_gyro_y_train.txt")
# tris16<-read.table("./UCI HAR Dataset/train/Inertial Signals/body_gyro_z_train.txt")
# tris17<-read.table("./UCI HAR Dataset/train/Inertial Signals/total_acc_x_train.txt")
# tris18<-read.table("./UCI HAR Dataset/train/Inertial Signals/total_acc_y_train.txt")
# tris19<-read.table("./UCI HAR Dataset/train/Inertial Signals/total_acc_z_train.txt")
#
#
#
# ############################################################
#
# colnames(tr1)
# colnames(tr2)
# colnames(tr3)
# colnames(tris1)
# colnames(tris2)
# colnames(tris3)
# colnames(tris4)
# colnames(tris5)
# colnames(tris6)
# colnames(tris7)
# colnames(tris8)
# colnames(tris9)
##########################################################
dflist = list(tr1,tr11,tr3,tr13)#,tr3,tr11,tr12,tr13)
tj<-join_all(dflist)
names(tr1)
names(tr11)
total <- merge(tr1,tr11,by.x="V1",by.y="V1",all=TRUE)
names(tr1)
names(tr11)
tot1 <- merge(tr1,tr11,by.x="V1",by.y="V1",all=TRUE)
names(tr2)
names(tr12)
tot2<- merge(tr2,tr12)
names(tr3)
names(tr13)
tot1<- merge(tr3,tr13)
names(tr3)
names(tr13)
tot3<- merge(tr3,tr13)
names(tr1)
names(tr11)
tot1 <- merge(tr1,tr11,by.x="V1",by.y="V1",all=TRUE)
tot1
tot2
tot3
tris1<-read.table("./UCI HAR Dataset/test/Inertial Signals/body_acc_x_test.txt")
tris1
ncol(tris1)
tr1<-read.table("./UCI HAR Dataset/test/subject_test.txt")
tr2<-read.table("./UCI HAR Dataset/test/X_test.txt")
tr3<-read.table("./UCI HAR Dataset/test/Y_test.txt")
tris1<-read.table("./UCI HAR Dataset/test/Inertial Signals/body_acc_x_test.txt")
tris2<-read.table("./UCI HAR Dataset/test/Inertial Signals/body_acc_y_test.txt")
tris3<-read.table("./UCI HAR Dataset/test/Inertial Signals/body_acc_z_test.txt")
tris4<-read.table("./UCI HAR Dataset/test/Inertial Signals/body_gyro_x_test.txt")
tris5<-read.table("./UCI HAR Dataset/test/Inertial Signals/body_gyro_y_test.txt")
tris6<-read.table("./UCI HAR Dataset/test/Inertial Signals/body_gyro_z_test.txt")
tris7<-read.table("./UCI HAR Dataset/test/Inertial Signals/total_acc_x_test.txt")
tris8<-read.table("./UCI HAR Dataset/test/Inertial Signals/total_acc_y_test.txt")
tris9<-read.table("./UCI HAR Dataset/test/Inertial Signals/total_acc_z_test.txt")
tr11<-read.table("./UCI HAR Dataset/train/subject_train.txt")
tr12<-read.table("./UCI HAR Dataset/train/X_train.txt")
tr13<-read.table("./UCI HAR Dataset/train/Y_train.txt")
tris11<-read.table("./UCI HAR Dataset/train/Inertial Signals/body_acc_x_train.txt")
tris12<-read.table("./UCI HAR Dataset/train/Inertial Signals/body_acc_y_train.txt")
tris13<-read.table("./UCI HAR Dataset/train/Inertial Signals/body_acc_z_train.txt")
tris14<-read.table("./UCI HAR Dataset/train/Inertial Signals/body_gyro_x_train.txt")
tris15<-read.table("./UCI HAR Dataset/train/Inertial Signals/body_gyro_y_train.txt")
tris16<-read.table("./UCI HAR Dataset/train/Inertial Signals/body_gyro_z_train.txt")
tris17<-read.table("./UCI HAR Dataset/train/Inertial Signals/total_acc_x_train.txt")
tris18<-read.table("./UCI HAR Dataset/train/Inertial Signals/total_acc_y_train.txt")
tris19<-read.table("./UCI HAR Dataset/train/Inertial Signals/total_acc_z_train.txt")
ncol(tr2)
ncol(tr12)
feature <- read.table("./UCI HAR Dataset/feature.txt")
feature <- read.table("./UCI HAR Dataset/features.txt")
feature
features$V2 %in% "mean()"
f <- read.table("./UCI HAR Dataset/features.txt")
f$V2 %in% "mean()"
f[grepl("mean()",f$V2),]
fstd<-f[grepl("std()",f$V2),]
fstd
fstd<-f[grepl("std()",f$V2),][V1]
fstd<-f[grepl("std()",f$V2),][f$V1,]
fstd
fstd$V1
fstd<-f[grepl("std()",f$V2),]
fstd$V1
fstd
fstd$V1
fmean$V1
fmean<-f[grepl("mean()",f$V2),]
fmean$V1
fmean
fmer<-merge(fmean$V1,fstd$V1)
fmer
fmer<-merge(fmean$V1,fstd$V1,by.x="V1",by.y="V1",all=FALSE)
fmer<-merge(fmean$V1,fstd$V1,by.x="V1",by.y="V1",all=FALSE)
fmer<-merge(fmean,fstd,by.x="V1",by.y="V1",all=FALSE)
fmer
fmean<-fmean$V1
fmean
class(fmean)
class(as.list(fmean))
fmean<-as.list(fmean$V1)
fmean<-as.list(fmean)<-fmean$V1
fmean<-f[grepl("mean()",f$V2),]
fmean<-as.list(fmean$V1)
class(fmean)
fmean<-as.list(f[grepl("mean()",f$V2),])
class(fmean)
fstd<-as.list(f[grepl("std()",f$V2),])
fstd
fstd<-as.list(f[grepl("std()",f$V2),][f$V1])
fstd<-as.list(f[grepl("std()",f$V2),][f$V1,])
fmean<-as.list(f[grepl("mean()",f$V2),][f$V1,])
class(fmean)
fmean
fmean<-f[grepl("mean()",f$V2),]
fmean<-as.list(fmean$V1)
class(fmean)
fmean
fstd<-f[grepl("std()",f$V2),]
fstd<-as.list(fstd$V1)
fstd
c(fmean,fstd)
tr2[f_all,]
f_all <- c(fmean,fstd)
tr2[f_all,]
tr2[as.numeric(f_all),]
tr2[,f_all]
tr2[,fmean]
tr2[,as.numeric(fmean)]
tr2[,as.numeric(f_all)]
t_all <- tr2[,as.numeric(f_all)]
ncol(t_all)
f_all
t_all
head(t_all)
f_all
f_all
head(t_all)
f_all[1,]
f_all[,1]
f_all[1]
f_all[]
t_all_12 <- tr12[,as.numeric(f_all)]
###checking for data consistancy
f_all
head(t_all_12)
t_all <- rbind(t_all_2,t_all_12)
######find features responsible for mean
fmean<-f[grepl("mean()",f$V2),]
fmean<-as.list(fmean$V1)
class(fmean)
######find features responsible for std
fstd<-f[grepl("std()",f$V2),]
fstd<-as.list(fstd$V1)
###join 2 lists
f_all <- c(fmean,fstd)
###filter out only the mean/std column data from tr2
t_all_2 <- tr2[,as.numeric(f_all)]
###checking for data consistancy
f_all
head(t_all_2)
###filter out only the mean/std column data from tr12
t_all_12 <- tr12[,as.numeric(f_all)]
###checking for data consistancy
f_all
head(t_all_12)
### build a single tidy data set from t_all_2 and t_all_12
t_all <- rbind(t_all_2,t_all_12)
t_all
t_all_12
###cross check row number count
nrow(t_all_12)
nrow(t_all_2)
nrow(t_all)
write.table(t_all, file = "foo.csv", sep = ",", col.names = NA, qmethod = "double")
fmean_name <- as.list(fmean$V2)
class(fmean)
class(fmean,fmean_name)
class(fmean_name)
fmean_name
fmean_name
fmean_name[1]
fmean_name[2]
fmean_name[[1]]
fmean_name <- fmean$V2
fmean_name
fmean_all<-f[grepl("mean()",f$V2),]
fmean<-as.list(fmean_all$V1)
fmean_name <- fmean_all$V2
class(fmean)
class(fmean_name)
fmean_name
fmean_name <- as.list(fmean_all$V2)
fmean_name
fmean_all<-f[grepl("mean()",f$V2),]
fmean_all
fmean_name <- as.character(fmean_all$V2)
fmean_name
fstd_name <- as.character(fstd_all$V2)
fstd_all<-f[grepl("std()",f$V2),]
fstd<-as.list(fstd_all$V1)
fstd_name <- as.character(fstd_all$V2)
f_all <- c(fmean,fstd)
f_all_name <- c(fmean_name,fstd_name)
f_all_name
nrow(f_all)==nrow(f_all_name)
nrow(f_all_name)
nrow(f_all)
f_all <- c(fmean,fstd)
nrow(f_all)
count(f_all)
f_all
length(f_all)==length(f_all_name)
write.table(t_all, file = "tidy_data_set_1.csv", sep = ",", col.names = f_all_name, qmethod = "double")
write.table(t_all, file = "tidy_data_set_1.csv", sep = ",", row.names= NA, col.names = f_all_name, qmethod = "double")
write.table(t_all, file = "tidy_data_set_1.csv", sep = ",", row.names= FALSE, col.names = f_all_name, qmethod = "double")
write.table(t_all, file = "tidy_data_set_1.txt", sep = ",", row.names= FALSE, col.names = f_all_name, qmethod = "double")
s11<-read.table("./UCI HAR Dataset/train/Y_train.txt")
s1<-read.table("./UCI HAR Dataset/test/Y_test.txt")
t2$Sub <- t1$V1
########Import library
library(plyr)
##########################Import data
#features
f <- read.table("./UCI HAR Dataset/features.txt")
###subject
tr1<-read.table("./UCI HAR Dataset/test/subject_test.txt")
###core data
tr2<-read.table("./UCI HAR Dataset/test/X_test.txt")
###Activity
tr3<-read.table("./UCI HAR Dataset/test/Y_test.txt")
###subject
tr11<-read.table("./UCI HAR Dataset/train/subject_train.txt")
###core data
tr12<-read.table("./UCI HAR Dataset/train/X_train.txt")
###Activity
tr13<-read.table("./UCI HAR Dataset/train/Y_train.txt")
t2$Subject_Number <- tr1$V1
tr2$Subject_Number <- tr1$V1
head(tr2)
tr12$Subject_Number <- tr11$V1
head(tr12)
###Convert and add activity column to the t2 and t12
tr2$Activity <- tr3$V1
tr12$Activity <- tr13$V1
head(tr12)
tr2$Activity <- ifelse(tr3$V1 == 1,"WALKING")
tr2$Activity <- ifelse(tr3$V1 == 1,"WALKING","")
head(tr2)
tr2$Activity_name <- ifelse(as.numeric(tr2$Activity)==1,"WALKING","Other")
head(tr2)
tr2$Activity <- tr3$V1
head(tr2)
tr2$Activity_name <- ifelse(as.numeric(tr2$Activity)==1,"WALKING","Other")
head(tr2)
tr2$Activity_name <- ifelse(as.numeric(tr2$Activity)==1,"WALKING",
(as.numeric(tr2$Activity)==2,"WALKING_UPSTAIRS"))
tr2$Activity_name <- ifelse(as.numeric(tr2$Activity)==1,"WALKING",
ifelse(as.numeric(tr2$Activity)==2,"WALKING_UPSTAIRS","other"))
tr2$Activity_name <- ifelse(as.numeric(tr2$Activity)==1,"WALKING",
ifelse(as.numeric(tr2$Activity)==2,"WALKING_UPSTAIRS",
ifelse(as.numeric(tr2$Activity)==3,"WALKING_DOWNSTAIRS",
ifelse(as.numeric(tr2$Activity)==4,"SITTING",
ifelse(as.numeric(tr2$Activity)==5,"STANDING",
ifelse(as.numeric(tr2$Activity)==6,"LAYING","other"))))))
head(tr2)
tr2$Activity_name <- ifelse(as.numeric(tr3$V1)==1,"WALKING",
ifelse(as.numeric(tr3$V1)==2,"WALKING_UPSTAIRS",
ifelse(as.numeric(tr3$V1)==3,"WALKING_DOWNSTAIRS",
ifelse(as.numeric(tr3$V1)==4,"SITTING",
ifelse(as.numeric(tr3$V1)==5,"STANDING",
ifelse(as.numeric(tr3$V1)==6,"LAYING","other"))))))
head(tr2)
tr12$Activity_name <- ifelse(as.numeric(tr13$V1)==1,"WALKING",
ifelse(as.numeric(tr13$V1)==2,"WALKING_UPSTAIRS",
ifelse(as.numeric(tr13$V1)==3,"WALKING_DOWNSTAIRS",
ifelse(as.numeric(tr13$V1)==4,"SITTING",
ifelse(as.numeric(tr13$V1)==5,"STANDING",
ifelse(as.numeric(tr13$V1)==6,"LAYING","other"))))))
head(tr12)
fmean_all<-f[grepl("mean()",f$V2),]
fmean<-as.list(fmean_all$V1)
fmean_name <- as.character(fmean_all$V2)
class(fmean)
class(fmean_name)
fstd_all<-f[grepl("std()",f$V2),]
fstd<-as.list(fstd_all$V1)
fstd_name <- as.character(fstd_all$V2)
f_all <- c(fmean,fstd)
f_all_name <- c(fmean_name,fstd_name)
length(f_all)==length(f_all_name)
t_all_2 <- tr2[,as.numeric(f_all)]
t_all_2$Subject_Number <- tr2$Subject_Number
t_all_2$Activity_name <- tr2$Activity_name
f_all
head(t_all_2)
t_all_12 <- tr12[,as.numeric(f_all)]
t_all_12$Subject_Number <- tr12$Subject_Number
t_all_12$Activity_name <- tr12$Activity_name
f_all
head(t_all_12)
t_all <- rbind(t_all_2,t_all_12)
nrow(t_all_12) #7352
nrow(t_all_2)  #2947
#7352+2947=10299
nrow(t_all)    #10299
write.table(t_all, file = "tidy_data_set_1.txt", sep = ",", row.names= FALSE, col.names = f_all_name, qmethod = "double")
f_all_name <- c(fmean_name,fstd_name,"Subject_Number","Activity_name")
write.table(t_all, file = "tidy_data_set_1.txt", sep = ",", row.names= FALSE, col.names = f_all_name, qmethod = "double")
length(f_all)+2==length(f_all_name)
head(t_all)
########Import library
library(plyr)
##########################Import data
#features
f <- read.table("./UCI HAR Dataset/features.txt")
###subject
tr1<-read.table("./UCI HAR Dataset/test/subject_test.txt")
###core data
tr2<-read.table("./UCI HAR Dataset/test/X_test.txt")
###Activity
tr3<-read.table("./UCI HAR Dataset/test/Y_test.txt")
###subject
tr11<-read.table("./UCI HAR Dataset/train/subject_train.txt")
###core data
tr12<-read.table("./UCI HAR Dataset/train/X_train.txt")
###Activity
tr13<-read.table("./UCI HAR Dataset/train/Y_train.txt")
###add group partition
tr2$group_partition <- "test"
tr12$group_partition <- "train"
head(tr12)
###add subject column to the t2 and t12
tr2$Subject_Number <- tr1$V1
tr12$Subject_Number <- tr11$V1
head(tr12)
###Convert and add activity column to the t2 and t12
tr2$Activity_name <- ifelse(as.numeric(tr3$V1)==1,"WALKING",
ifelse(as.numeric(tr3$V1)==2,"WALKING_UPSTAIRS",
ifelse(as.numeric(tr3$V1)==3,"WALKING_DOWNSTAIRS",
ifelse(as.numeric(tr3$V1)==4,"SITTING",
ifelse(as.numeric(tr3$V1)==5,"STANDING",
ifelse(as.numeric(tr3$V1)==6,"LAYING","other"))))))
head(tr2)
tr12$Activity_name <- ifelse(as.numeric(tr13$V1)==1,"WALKING",
ifelse(as.numeric(tr13$V1)==2,"WALKING_UPSTAIRS",
ifelse(as.numeric(tr13$V1)==3,"WALKING_DOWNSTAIRS",
ifelse(as.numeric(tr13$V1)==4,"SITTING",
ifelse(as.numeric(tr13$V1)==5,"STANDING",
ifelse(as.numeric(tr13$V1)==6,"LAYING","other"))))))
head(tr12)
######find columns-index in features responsible for mean
fmean_all<-f[grepl("mean()",f$V2),]
fmean<-as.list(fmean_all$V1)
fmean_name <- as.character(fmean_all$V2)
class(fmean)
class(fmean_name)
######find columns-index in features responsible for std
fstd_all<-f[grepl("std()",f$V2),]
fstd<-as.list(fstd_all$V1)
fstd_name <- as.character(fstd_all$V2)
###join 2 lists
f_all <- c(fmean,fstd)
f_all_name <- c(fmean_name,fstd_name,"group_partition","Subject_Number","Activity_name")
###Cross check
length(f_all)+2==length(f_all_name)
###filter out only the mean/std column data from tr2
t_all_2 <- tr2[,as.numeric(f_all)]
t_all_2$group_partition <- tr2$group_partition
t_all_2$Subject_Number <- tr2$Subject_Number
t_all_2$Activity_name <- tr2$Activity_name
###checking for data consistancy
f_all
head(t_all_2)
###filter out only the mean/std column data from tr12
t_all_12 <- tr12[,as.numeric(f_all)]
t_all_12$group_partition <- tr12$group_partition
t_all_12$Subject_Number <- tr12$Subject_Number
t_all_12$Activity_name <- tr12$Activity_name
###checking for data consistancy
f_all
head(t_all_12)
### build a single tidy data set from t_all_2 and t_all_12
t_all <- rbind(t_all_2,t_all_12)
head(t_all)
###cross check row number count
nrow(t_all_12) #7352
nrow(t_all_2)  #2947
#7352+2947=10299
nrow(t_all)    #10299
#### Consistancy check passed :)
###Writing to a file
write.table(t_all, file = "tidy_data_set_1.txt", sep = ",", row.names= FALSE, col.names = f_all_name, qmethod = "double")
##################################################################
#Tidy_data_set_2 : each_variable_each_activity_each_subject
length(f_all)+3==length(f_all_name)
length(f_all)+2==length(f_all_name)
t_all
aggdata <-aggregate(t_all, by=list(Subject_Number,group_partition,Activity_name),
FUN=mean, na.rm=TRUE)
aggdata <-aggregate(t_all, by=list(t_all$Subject_Number,t_all$group_partition,t_all$Activity_name),
FUN=mean, na.rm=TRUE)
aggdata
aggdata
ncol(aggdata)
aggdata <-aggregate(t_all, by=list(t_all$Subject_Number,t_all$group_partition,t_all$Activity_name),
FUN=mean)
warnings()
aggdata <-aggregate(t_all, by=list(t_all$Subject_Number,t_all$group_partition,t_all$Activity_name),
FUN=mean, na.rm=TRUE)
aggdata <-aggregate(t_all, by=list(t_all$Subject_Number,t_all$Activity_name),
FUN=mean, na.rm=TRUE)
ncol(aggdata)
tr212 <- rbind(tr2,tr12)
aggdata <-aggregate(tr212, by=list(t_all$Subject_Number,t_all$group_partition,t_all$Activity_name),
FUN=mean, na.rm=TRUE)
ncol(aggdata)
aggdata <-aggregate(t_all, by=list(t_all$Subject_Number,t_all$group_partition,t_all$Activity_name),
FUN=mean, na.rm=TRUE)
ncol(aggdata)
print(aggdata)
